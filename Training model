import keras 
from keras.models import Sequential
from keras.layers import Convolution2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.layers import Dense,BatchNormalization
from keras.preprocessing import image
import numpy as np
import cv2
from keras.preprocessing.image import ImageDataGenerator
train_datagen=ImageDataGenerator(rescale=1./255, shear_range=0.2, zoom_range=0.2, 
horizontal_flip=True)
test_datagen=ImageDataGenerator(rescale=1./255)
x_train=train_datagen.flow_from_directory(r'dataset1/training', target_size=(64,64), batch_size=32, 
class_mode='categorical')
x_test=test_datagen.flow_from_directory(r'dataset1/test', target_size=(64,64), batch_size=32, 
class_mode='categorical')
print(x_train.class_indices)
model=Sequential()
model.add(Convolution2D(32,(3,3),input_shape=(64,64,3),activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Flatten())
model.add(Dense(units=3, init="random_uniform", activation='softmax'))
model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])
model.fit_generator(x_train, steps_per_epoch=47, epochs=15, validation_data=x_test, 
validation_steps=30)
model.save("Recognizer.h5")
